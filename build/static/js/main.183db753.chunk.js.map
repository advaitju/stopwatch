{"version":3,"sources":["components/Stopwatch/Stopwatch.js","App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","props","toggleState","setState","prevState","newState","runningState","startTime","Date","totalTime","setTimeout","updateTimeTimeout","state","updateTime","now","clearTimer","keyDown","e","keyCode","this","className","onClick","onKeyDown","role","tabIndex","toISOString","substr","type","Component","App","Helmet","title","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAIqBA,E,kDACpB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IASPC,YAAc,WACb,EAAKC,UAAS,SAACC,GACd,IAAMC,EAAW,GAWjB,OATID,EAAUE,cACbD,EAASC,cAAe,EACxBD,EAASE,UAAY,OAErBF,EAASC,cAAe,EACxBD,EAASE,UAAY,IAAIC,KAASJ,EAAUK,UAC5CC,WAAW,EAAKC,kBAAmB,KAG7BN,MAvBU,EA2BnBM,kBAAoB,WACM,EAAKC,MAAtBN,eAGP,EAAKO,aACLH,WAAW,EAAKC,kBAAmB,MAhClB,EAqCnBE,WAAa,WACZ,IAAMC,EAAM,IAAIN,KAEhB,EAAKL,UAAS,SAACC,GAAD,MAAgB,CAC7BK,UAAWK,EAAMV,EAAUG,eAzCV,EA6CnBQ,WAAa,WACZ,IAAMD,EAAM,IAAIN,KAEhB,EAAKL,SAAS,CACbI,UAAWO,EACXL,UAAW,KAlDM,EAsDnBO,QAAU,SAACC,GACQ,KAAdA,EAAEC,SACL,EAAKhB,eArDN,EAAKU,MAAQ,CACZL,UAAW,KACXD,cAAc,EACdG,UAAW,GANM,E,0CA4DnB,WAAU,IAAD,OACAA,EAAcU,KAAKP,MAAnBH,UAER,OACC,sBAAKW,UAAU,YAAf,UACC,sBACCA,UAAU,OACVC,QAASF,KAAKjB,YACdoB,UAAW,SAACL,GAAD,OAAO,EAAKD,QAAQC,IAC/BM,KAAK,SACLC,SAAS,IALV,UAOE,IAAIhB,KAAKC,GAAWgB,cAAcC,OAAO,GAAI,GAC9C,sBAAMN,UAAU,uBAAhB,SACE,IAAIZ,KAAKC,GAAWgB,cAAcC,OAAO,GAAI,QAGhD,wBAAQN,UAAU,cAAcO,KAAK,SAASN,QAASF,KAAKJ,WAA5D,0B,GA9EmCa,aCGlBC,E,4JACpB,WACC,OACC,sBAAKT,UAAU,MAAf,UACC,cAACU,EAAA,EAAD,CAAQC,MAAM,cAEd,sBAAKX,UAAU,cAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,c,GAR4BY,iBCKlBC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.183db753.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './Stopwatch.scss';\n\nexport default class Stopwatch extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstartTime: null,\n\t\t\trunningState: false,\n\t\t\ttotalTime: 0,\n\t\t};\n\t}\n\n\ttoggleState = () => {\n\t\tthis.setState((prevState) => {\n\t\t\tconst newState = {};\n\n\t\t\tif (prevState.runningState) {\n\t\t\t\tnewState.runningState = false;\n\t\t\t\tnewState.startTime = null;\n\t\t\t} else {\n\t\t\t\tnewState.runningState = true;\n\t\t\t\tnewState.startTime = new Date() - prevState.totalTime;\n\t\t\t\tsetTimeout(this.updateTimeTimeout, 10);\n\t\t\t}\n\n\t\t\treturn newState;\n\t\t});\n\t};\n\n\tupdateTimeTimeout = () => {\n\t\tconst { runningState } = this.state;\n\n\t\tif (runningState) {\n\t\t\tthis.updateTime();\n\t\t\tsetTimeout(this.updateTimeTimeout, 10);\n\t\t}\n\t};\n\n\t// eslint-disable-next-line consistent-return\n\tupdateTime = () => {\n\t\tconst now = new Date();\n\n\t\tthis.setState((prevState) => ({\n\t\t\ttotalTime: now - prevState.startTime,\n\t\t}));\n\t};\n\n\tclearTimer = () => {\n\t\tconst now = new Date();\n\n\t\tthis.setState({\n\t\t\tstartTime: now,\n\t\t\ttotalTime: 0,\n\t\t});\n\t};\n\n\tkeyDown = (e) => {\n\t\tif (e.keyCode === 32) {\n\t\t\tthis.toggleState();\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { totalTime } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"stopwatch\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"time\"\n\t\t\t\t\tonClick={this.toggleState}\n\t\t\t\t\tonKeyDown={(e) => this.keyDown(e)}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t>\n\t\t\t\t\t{new Date(totalTime).toISOString().substr(11, 8)}\n\t\t\t\t\t<span className=\"hundred-milliseconds\">\n\t\t\t\t\t\t{new Date(totalTime).toISOString().substr(20, 1)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"clear-timer\" type=\"button\" onClick={this.clearTimer}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { PureComponent } from 'react';\nimport Helmet from 'react-helmet';\n\nimport './App.scss';\n\nimport Stopwatch from './components/Stopwatch/Stopwatch';\n\nexport default class App extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Helmet title=\"Stopwatch\" />\n\n\t\t\t\t<div className=\"stopwatches\">\n\t\t\t\t\t<Stopwatch />\n\t\t\t\t\t<Stopwatch />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}